services:

  # --- Config servers ---
  configsvr1:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: configsvr1
    entrypoint: ["docker-entrypoint.sh"]
    command:
      - mongod
      - --configsvr
      - --replSet
      - rs-config
      - --port
      - "27019"
      - --bind_ip_all
      #- --keyFile
      #- /scripts/mongo-keyfile
    volumes:
      - configsvr1_data:/data/configdb
      

  configsvr2:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: configsvr2
    entrypoint: ["docker-entrypoint.sh"]
    command:
      - mongod
      - --configsvr
      - --replSet
      - rs-config
      - --port
      - "27019"
      - --bind_ip_all
      #- --keyFile
      #- /scripts/mongo-keyfile
    volumes:
      - configsvr2_data:/data/configdb

  configsvr3:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: configsvr3
    entrypoint: ["docker-entrypoint.sh"]
    command:
      - mongod
      - --configsvr
      - --replSet
      - rs-config
      - --port
      - "27019"
      - --bind_ip_all
      #- --keyFile
      #- /scripts/mongo-keyfile
    volumes:
      - configsvr3_data:/data/configdb

  # --- Shard 1 (replica set rs-shard-01) ---
  shard1-a:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: shard1-a
    entrypoint: ["docker-entrypoint.sh"]
    command:
      - mongod
      - --shardsvr
      - --replSet
      - rs-shard-01
      - --port
      - "27018"
      - --bind_ip_all
      #- --keyFile
      #- /scripts/mongo-keyfile
    volumes:
      - shard1a_data:/data/db

  shard1-b:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: shard1-b
    entrypoint: ["docker-entrypoint.sh"]
    command:
      - mongod
      - --shardsvr
      - --replSet
      - rs-shard-01
      - --port
      - "27018"
      - --bind_ip_all
      #- --keyFile
      #- /scripts/mongo-keyfile
    volumes:
      - shard1b_data:/data/db

  shard1-c:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: shard1-c
    entrypoint: ["docker-entrypoint.sh"]
    command:
      - mongod
      - --shardsvr
      - --replSet
      - rs-shard-01
      - --port
      - "27018"
      - --bind_ip_all
      #- --keyFile
      #- /scripts/mongo-keyfile
    volumes:
      - shard1c_data:/data/db

  # --- Shard 2 (replica set rs-shard-02) ---
  shard2-a:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: shard2-a
    entrypoint: ["docker-entrypoint.sh"]
    command:
      - mongod
      - --shardsvr
      - --replSet
      - rs-shard-02
      - --port
      - "27018"
      - --bind_ip_all
      #- --keyFile
      #- /scripts/mongo-keyfile
    volumes:
      - shard2a_data:/data/db

  shard2-b:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: shard2-b
    entrypoint: ["docker-entrypoint.sh"]
    command:
      - mongod
      - --shardsvr
      - --replSet
      - rs-shard-02
      - --port
      - "27018"
      - --bind_ip_all
      #- --keyFile
      #- /scripts/mongo-keyfile
    volumes:
      - shard2b_data:/data/db

  shard2-c:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: shard2-c
    entrypoint: ["docker-entrypoint.sh"]
    command:
      - mongod
      - --shardsvr
      - --replSet
      - rs-shard-02
      - --port
      - "27018"
      - --bind_ip_all
      #- --keyFile
      #- /scripts/mongo-keyfile
    volumes:
      - shard2c_data:/data/db

  # --- Shard 3 (replica set rs-shard-03) ---
  shard3-a:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: shard3-a
    entrypoint: ["docker-entrypoint.sh"]
    command:
      - mongod
      - --shardsvr
      - --replSet
      - rs-shard-03
      - --port
      - "27018"
      - --bind_ip_all
      #- --keyFile
      #- /scripts/mongo-keyfile
    volumes:
      - shard3a_data:/data/db

  shard3-b:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: shard3-b
    entrypoint: ["docker-entrypoint.sh"]
    command:
      - mongod
      - --shardsvr
      - --replSet
      - rs-shard-03
      - --port
      - "27018"
      - --bind_ip_all
      #- --keyFile
      #- /scripts/mongo-keyfile
    volumes:
      - shard3b_data:/data/db

  shard3-c:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: shard3-c
    entrypoint: ["docker-entrypoint.sh"]
    command:
      - mongod
      - --shardsvr
      - --replSet
      - rs-shard-03
      - --port
      - "27018"
      - --bind_ip_all
      #- --keyFile
      #- /scripts/mongo-keyfile
    volumes:
      - shard3c_data:/data/db

  # --- Mongos router ---
  router:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: router
    entrypoint: ["docker-entrypoint.sh"]
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--host", "127.0.0.1", "--port", "27017",
           "--eval", "db.adminCommand({ping:1})"]
      interval: 5s
      timeout: 2s
      retries: 12
    depends_on:
      - configsvr1
      - configsvr2
      - configsvr3
      - shard1-a
      - shard1-b
      - shard1-c
      - shard2-a
      - shard2-b
      - shard2-c
      - shard3-a
      - shard3-b
      - shard3-c
    command: >
      mongos --configdb rs-config/configsvr1:27019,configsvr2:27019,configsvr3:27019
            --bind_ip_all --port 27017
    #        --keyFile /scripts/mongo-keyfile
    ports:
      - "27017:27017"
    volumes:
      - ./Data:/data

  # --- Init script ---
  init:
    image: mongo:latest
    container_name: init
    command:
    #- --keyFile
    #- /scripts/mongo-keyfile
    depends_on:
      router:
        condition: service_healthy
    entrypoint:
      - bash
      - /scripts/init-cluster.sh
    volumes:
      - ./scripts:/scripts
      - ./Data:/data

volumes:
  configsvr1_data: {}
  configsvr2_data: {}
  configsvr3_data: {}
  shard1a_data: {}
  shard1b_data: {}
  shard1c_data: {}
  shard2a_data: {}
  shard2b_data: {}
  shard2c_data: {}
  shard3a_data: {}
  shard3b_data: {}
  shard3c_data: {}
